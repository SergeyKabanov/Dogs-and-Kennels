// Created by Microsoft (R) C/C++ Compiler Version 12.00.8168.0 (c744d000).
//
// c:\dogs_outer\release\DOGS_INNER.tli
//
// Wrapper implementations for Win32 type library DOGS_INNER.tlb
// compiler-generated file created 04/25/01 at 19:52:54 - DO NOT EDIT!

#pragma once

//
// interface Idog wrapper method implementations
//

inline HRESULT Idog::Run ( ) {
    HRESULT _hr = raw_Run();
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT Idog::Bark ( long nTime ) {
    HRESULT _hr = raw_Bark(nTime);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT Idog::Sleep ( long nTime ) {
    HRESULT _hr = raw_Sleep(nTime);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline _bstr_t Idog::GetBreed ( ) {
    BSTR _result;
    HRESULT _hr = get_Breed(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline void Idog::PutBreed ( _bstr_t pVal ) {
    HRESULT _hr = put_Breed(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

inline _bstr_t Idog::GetName ( ) {
    BSTR _result;
    HRESULT _hr = get_Name(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline void Idog::PutName ( _bstr_t pVal ) {
    HRESULT _hr = put_Name(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

inline _bstr_t Idog::GetHairColor ( ) {
    BSTR _result;
    HRESULT _hr = get_HairColor(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _bstr_t(_result, false);
}

inline void Idog::PutHairColor ( _bstr_t pVal ) {
    HRESULT _hr = put_HairColor(pVal);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
}

//
// interface Ikennel wrapper method implementations
//

inline HRESULT Ikennel::Save ( _bstr_t bstrFilename ) {
    HRESULT _hr = raw_Save(bstrFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline HRESULT Ikennel::Load ( _bstr_t bstrFilename ) {
    HRESULT _hr = raw_Load(bstrFilename);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _hr;
}

inline long Ikennel::GetCount ( ) {
    long _result;
    HRESULT _hr = raw_GetCount(&_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return _result;
}

inline IdogPtr Ikennel::GetAt ( long nIndex ) {
    struct Idog * _result;
    HRESULT _hr = raw_GetAt(nIndex, &_result);
    if (FAILED(_hr)) _com_issue_errorex(_hr, this, __uuidof(this));
    return IdogPtr(_result, false);
}
